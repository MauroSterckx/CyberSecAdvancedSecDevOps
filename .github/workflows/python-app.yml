name: Secure Python Pipeline

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: "0 0 * * 0"

permissions:
  contents: read
  security-events: write

jobs:
  security-checks:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Clone application source code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Run Semgrep for Static Application Security Testing (SAST)
      - name: Run full scan with Semgrep
        run: |
          semgrep --sarif --output report.sarif --metrics=off --config="p/default"
        continue-on-error: false # Zorg ervoor dat de job faalt als Semgrep een probleem vindt

      # Step 3: Save the report as an artifact
      - name: Save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: report.sarif
          path: report.sarif

      # Step 4: Download the artifact (optioneel, kan nodig zijn voor later gebruik)
      - name: Download report
        uses: actions/download-artifact@v4
        with:
          name: report.sarif

      # Step 5: Check the status of the scan and block PR if it fails
      - name: Check Semgrep report status
        run: |
          if [ -f report.sarif ]; then
            # Als er resultaten zijn, betekent dit dat er kwetsbaarheden zijn gevonden
            jq '.results | length' report.sarif | grep -q '0' || exit 1
          else
            echo "Semgrep report not found, exiting"
            exit 1
        continue-on-error: false # Als er kwetsbaarheden zijn, zorgt dit ervoor dat de workflow faalt
